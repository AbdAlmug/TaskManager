@using TaskManager.ViewModels;
@model LoginViewModel;

@{
    ViewData["Title"] = "Login";
    Layout = "_AccountLayout";
}

<div class="accoount-container">
    <div class="account-box">
        <h2 class="text-center mb-4">Login</h2>
        <form asp-action="Login" method="post">
            <div class="text-danger" asp-validation-summary="ModelOnly"></div>
            <div class="mb-3">
                <label asp-for="Email" class="form-label"></label>
                <input asp-for="Email" class="form-control" />
                <span class="text-danger" asp-validation-for="Email"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Password" class="form-label"></label>
                <input asp-for="Password" class="form-control" />
                <span class="text-danger" asp-validation-for="Password"></span>
            </div>
            <div class="float-end">
                <a asp-controller="Account" asp-action="VerifyEmail" class="text-decoration-none">
                    Forgot password?
                </a>
            </div>
            <div class="mb-3 form-check">
                <label asp-for="RememberMe" class="form-check-label">
                    <input asp-for="RememberMe" class="form-check-input" />
                    @Html.DisplayNameFor(m => m.RememberMe)
                </label>
            </div>
            <input type="submit" value="Login" class="btn btn-success p-2 w-100" />
            <p class="text-center mt-2">
                Don't have an account? <a asp-controller="Account" asp-action="Register" class="text-decoration-none">Register</a>
            </p>
            <div class="text-center">
                <a asp-controller="Home" asp-action="Index" class="text-decoration-none mt-3">Back</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial.cshtml");
    }
}